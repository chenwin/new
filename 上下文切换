
前TOP 20切换，- limit 20控制
stap -DMAXMAPENTRIES=10240 cs.stp 1

升级内核版本 update kernel
wget https://buildlogs.centos.org/c7.1708.u.x86_64/kernel/20171204203818/3.10.0-693.11.1.el7.x86_64/kernel-3.10.0-693.11.1.el7.x86_64.rpm
yum install kernel-3.10.0-693.11.1.el7.x86_64.rpm
awk -F\' '$1=="menuentry " {print $2}' /etc/grub2.cfg

yum installl screen
ctrl+a然后点击d，将当前screen隐藏；
screen -ls 查询当前所有的screen：
使用screen -r <screen-ID>进入其中一个screen

降低内核
rpm -qa |grep kernel-3.10


卸载高内核版本
rpm -ev kernel-3.10.0-693.11.1.el7.x86_64
rpm -ea kernel-tools-3.10.0-693.11.1.el7.x86_64
rpm -ea kernel-tools-libs-3.10.0-693.11.1.el7.x86_64


安装低内核版本
wget https://buildlogs.centos.org/c7.1611.u/kernel/20170704132018/3.10.0-514.26.2.el7.x86_64/kernel-tools-3.10.0-514.26.2.el7.x86_64.rpm
wget https://buildlogs.centos.org/c7.1611.u/kernel/20170704132018/3.10.0-514.26.2.el7.x86_64/kernel-tools-libs-3.10.0-514.26.2.el7.x86_64.rpm
再安装
wget https://buildlogs.centos.org/c7.1611.u/kernel/20170704132018/3.10.0-514.26.2.el7.x86_64/kernel-3.10.0-514.26.2.el7.x86_64.rpm


再安装高内核版本
wget https://buildlogs.centos.org/c7.1708.u.x86_64/kernel/20171204203818/3.10.0-693.11.1.el7.x86_64/kernel-3.10.0-693.11.1.el7.x86_64.rpm
wget https://buildlogs.centos.org/c7.1708.u.x86_64/kernel/20171204203818/3.10.0-693.11.1.el7.x86_64/kernel-tools-3.10.0-693.11.1.el7.x86_64.rpm
wget https://buildlogs.centos.org/c7.1708.u.x86_64/kernel/20171204203818/3.10.0-693.11.1.el7.x86_64/kernel-tools-libs-3.10.0-693.11.1.el7.x86_64.rpm


#查看可选的GRUB内核配置开机选单
awk -F\' '$1=="menuentry " {print $2}' /etc/grub2.cfg

设置内核配置开机选单为第0项（即上面返回值中的第一个）
grub2-set-default 0
grub2-editenv list
==============================================================================
#! /usr/bin/env stap
#
#
global csw_count
global idle_count
probe scheduler.cpu_off {
csw_count[task_prev, task_next]++
idle_count+=idle
}

function fmt_task(task_prev, task_next)
{
    return sprintf("%s(%d)->%s(%d)",
    task_execname(task_prev),
    task_pid(task_prev),
    task_execname(task_next),
    task_pid(task_next))
}

function print_cswtop () {
    printf ("%45s %10s\n", "Context switch", "COUNT")
    foreach ([task_prev, task_next] in csw_count- limit 20) {
    printf("%45s %10d\n", fmt_task(task_prev, task_next), csw_count[task_prev, task_next])
}

printf("%45s %10d\n", "idle", idle_count)
    delete csw_count
    delete idle_count
}

probe timer.s($1) {
print_cswtop ()
printf("--------------------------------------------------------------\n")
}


============================================================================
多线程测试
for i in `seq 1 10`
do
  for XX in 16 32 64 128 256 512
  do
    DATE=`date +"%Y%m%d_%H%M%S"`
    #rcu_sched,有时候有sysbench?  grep rcu_sched
    pidstat -w 1 11 > $XX-$DATE.pidstat &
    vmstat 1 11 > $XX-$DATE.vmstat &
    #stap -DMAXMAPENTRIES=10240 cs.stp 1 > $XX-$DATE.stap &
    sysbench --threads=$XX --test=threads --thread-yields=2000 --thread-locks=2 run > $XX-$DATE.sysbench
    #pkill -9 stap
  done
done


查看结果
for XX in 16 32 64 128 256 512
do
  echo "threads=$XX"
  cat $XX-*.sysbench |grep "events (avg/stddev):" |awk '{print $3}' |awk -F'/' '{sum+=$1}; END {print sum/NR}'
  cat $XX-*.sysbench |grep "avg:" |awk '{sum+=$2}; END {print sum/NR}'
  echo "=========================="
done

===========================================================================
内存测试
mkdir $1
for i in `seq 1 5`
do
  for XX in 8 16 32 64 128 256 512
  do
    DATE=`date +"%Y%m%d_%H%M%S"`
    sysbench --test=memory --memory-block-size=8k --memory-total-size=10G run --num-threads=$XX > $1/$XX-$DATE.sysbench
  done
done

for XX in 8 16 32 64 128 256 512
do
  echo "threads=$XX"
  #cat $XX-*.sysbench |grep "events (avg/stddev):" |awk '{print $3}' |awk -F'/' '{sum+=$1}; END {print sum/NR}'
  #cat $XX-*.sysbench |grep "execution" |awk '{print $4}' |awk -F'/' '{sum+=$1}; END {print sum/NR}'
  cat $XX-*.sysbench |grep "transferred" |awk '{print $4}' |awk -F'(' '{sum+=$2}; END {print sum/NR}'
  echo "=========================="
done

perf stat -e cache-misses sysbench --test=memory --memory-block-size=8k --memory-total-size=10G run --num-threads=512

查看缺页次数
cat /proc/interrupts |grep RES;
echo 1 > /sys/kernel/debug/tracing/events/exceptions/enable;
sysbench --test=memory --memory-block-size=8k --memory-total-size=10G run --num-threads=8
echo 0 > /sys/kernel/debug/tracing/events/exceptions/enable;
cd /sys/kernel/debug/tracing/;
cat trace |grep sysbench |wc -l
